{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\andre\\\\Desktop\\\\ProyectoAndres\\\\alhambraCrm\\\\frontend_react\\\\src\\\\contexto\\\\ContextoAutenticacion.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\n\n// Crear el contexto\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ContextoAutenticacion = /*#__PURE__*/createContext();\nexport const ProveedorAutenticacion = ({\n  children\n}) => {\n  _s();\n  const [usuario, setUsuario] = useState(null);\n  const [cargando, setCargando] = useState(true);\n  useEffect(() => {\n    // Comprobar si hay un usuario en localStorage\n    const usuarioGuardado = localStorage.getItem('usuario');\n    if (usuarioGuardado) {\n      setUsuario(JSON.parse(usuarioGuardado));\n    }\n    setCargando(false);\n  }, []);\n\n  // Función para iniciar sesión\n  const iniciarSesion = (datosUsuario, callback) => {\n    // Aquí se implementará la lógica real de autenticación con el backend\n    // Por ahora, simulamos un inicio de sesión exitoso\n    const usuarioAutenticado = {\n      id: 1,\n      nombre: 'Usuario',\n      apellidos: 'Demo',\n      email: datosUsuario.email,\n      rol: datosUsuario.email.includes('admin') ? 'admin' : 'cliente'\n    };\n    setUsuario(usuarioAutenticado);\n    localStorage.setItem('usuario', JSON.stringify(usuarioAutenticado));\n    if (callback) callback();\n  };\n\n  // Función para registrar un nuevo usuario\n  const registrarUsuario = (datosUsuario, callback) => {\n    // Aquí se implementará la lógica real de registro con el backend\n    // Por ahora, simulamos un registro exitoso\n\n    // Generamos un ID único para el nuevo usuario\n    const nuevoId = Date.now();\n    const nuevoUsuario = {\n      id: nuevoId,\n      nombre: datosUsuario.nombre,\n      apellidos: datosUsuario.apellidos,\n      email: datosUsuario.email,\n      telefono: datosUsuario.telefono || '',\n      empresa: datosUsuario.empresa || '',\n      rol: 'cliente' // Por defecto, todos los usuarios nuevos son clientes\n    };\n\n    // Guardamos el usuario en el estado y en localStorage\n    setUsuario(nuevoUsuario);\n    localStorage.setItem('usuario', JSON.stringify(nuevoUsuario));\n\n    // En un caso real, aquí se enviarían los datos al backend\n    console.log('Nuevo usuario registrado:', nuevoUsuario);\n    if (callback) callback();\n  };\n\n  // Función para cerrar sesión\n  const cerrarSesion = callback => {\n    setUsuario(null);\n    localStorage.removeItem('usuario');\n    if (callback) callback();\n  };\n\n  // Verificar si el usuario está autenticado\n  const estaAutenticado = () => {\n    return !!usuario;\n  };\n\n  // Verificar si el usuario es administrador\n  const esAdmin = () => {\n    return usuario && usuario.rol === 'admin';\n  };\n\n  // Valores que se proporcionarán a través del contexto\n  const valor = {\n    usuario,\n    cargando,\n    iniciarSesion,\n    registrarUsuario,\n    cerrarSesion,\n    estaAutenticado,\n    esAdmin\n  };\n  return /*#__PURE__*/_jsxDEV(ContextoAutenticacion.Provider, {\n    value: valor,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n};\n_s(ProveedorAutenticacion, \"S8/JCBTkVpYKJ/1lvIrTttILOk8=\");\n_c = ProveedorAutenticacion;\nvar _c;\n$RefreshReg$(_c, \"ProveedorAutenticacion\");","map":{"version":3,"names":["React","createContext","useState","useEffect","jsxDEV","_jsxDEV","ContextoAutenticacion","ProveedorAutenticacion","children","_s","usuario","setUsuario","cargando","setCargando","usuarioGuardado","localStorage","getItem","JSON","parse","iniciarSesion","datosUsuario","callback","usuarioAutenticado","id","nombre","apellidos","email","rol","includes","setItem","stringify","registrarUsuario","nuevoId","Date","now","nuevoUsuario","telefono","empresa","console","log","cerrarSesion","removeItem","estaAutenticado","esAdmin","valor","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/andre/Desktop/ProyectoAndres/alhambraCrm/frontend_react/src/contexto/ContextoAutenticacion.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\n\n// Crear el contexto\nexport const ContextoAutenticacion = createContext();\n\nexport const ProveedorAutenticacion = ({ children }) => {\n  const [usuario, setUsuario] = useState(null);\n  const [cargando, setCargando] = useState(true);\n  \n  useEffect(() => {\n    // Comprobar si hay un usuario en localStorage\n    const usuarioGuardado = localStorage.getItem('usuario');\n    if (usuarioGuardado) {\n      setUsuario(JSON.parse(usuarioGuardado));\n    }\n    setCargando(false);\n  }, []);\n  \n  // Función para iniciar sesión\n  const iniciarSesion = (datosUsuario, callback) => {\n    // Aquí se implementará la lógica real de autenticación con el backend\n    // Por ahora, simulamos un inicio de sesión exitoso\n    const usuarioAutenticado = {\n      id: 1,\n      nombre: 'Usuario',\n      apellidos: 'Demo',\n      email: datosUsuario.email,\n      rol: datosUsuario.email.includes('admin') ? 'admin' : 'cliente'\n    };\n    \n    setUsuario(usuarioAutenticado);\n    localStorage.setItem('usuario', JSON.stringify(usuarioAutenticado));\n    \n    if (callback) callback();\n  };\n  \n  // Función para registrar un nuevo usuario\n  const registrarUsuario = (datosUsuario, callback) => {\n    // Aquí se implementará la lógica real de registro con el backend\n    // Por ahora, simulamos un registro exitoso\n    \n    // Generamos un ID único para el nuevo usuario\n    const nuevoId = Date.now();\n    \n    const nuevoUsuario = {\n      id: nuevoId,\n      nombre: datosUsuario.nombre,\n      apellidos: datosUsuario.apellidos,\n      email: datosUsuario.email,\n      telefono: datosUsuario.telefono || '',\n      empresa: datosUsuario.empresa || '',\n      rol: 'cliente' // Por defecto, todos los usuarios nuevos son clientes\n    };\n    \n    // Guardamos el usuario en el estado y en localStorage\n    setUsuario(nuevoUsuario);\n    localStorage.setItem('usuario', JSON.stringify(nuevoUsuario));\n    \n    // En un caso real, aquí se enviarían los datos al backend\n    console.log('Nuevo usuario registrado:', nuevoUsuario);\n    \n    if (callback) callback();\n  };\n  \n  // Función para cerrar sesión\n  const cerrarSesion = (callback) => {\n    setUsuario(null);\n    localStorage.removeItem('usuario');\n    \n    if (callback) callback();\n  };\n  \n  // Verificar si el usuario está autenticado\n  const estaAutenticado = () => {\n    return !!usuario;\n  };\n  \n  // Verificar si el usuario es administrador\n  const esAdmin = () => {\n    return usuario && usuario.rol === 'admin';\n  };\n  \n  // Valores que se proporcionarán a través del contexto\n  const valor = {\n    usuario,\n    cargando,\n    iniciarSesion,\n    registrarUsuario,\n    cerrarSesion,\n    estaAutenticado,\n    esAdmin\n  };\n  \n  return (\n    <ContextoAutenticacion.Provider value={valor}>\n      {children}\n    </ContextoAutenticacion.Provider>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}