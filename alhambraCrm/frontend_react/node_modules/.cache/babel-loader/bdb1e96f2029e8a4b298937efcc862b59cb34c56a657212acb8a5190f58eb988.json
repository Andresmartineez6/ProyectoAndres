{"ast":null,"code":"import axios from 'axios';\n\n// URL base de la API\nconst API_URL = 'http://localhost/alhambraCrm/backend_php/api';\n\n// Configuración de axios con token de autenticación\nconst configurarAxios = () => {\n  const token = localStorage.getItem('token');\n  return axios.create({\n    baseURL: API_URL,\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': token ? `Bearer ${token}` : ''\n    }\n  });\n};\n\n// Servicios para tareas\nexport const servicioTareas = {\n  obtenerTodas: async (filtros = {}) => {\n    try {\n      const api = configurarAxios();\n      const respuesta = await api.get('/tareas', {\n        params: filtros\n      });\n      return respuesta.data;\n    } catch (error) {\n      console.error('Error al obtener tareas:', error);\n      throw error;\n    }\n  },\n  obtenerPorId: async id => {\n    try {\n      const api = configurarAxios();\n      const respuesta = await api.get(`/tareas/${id}`);\n      return respuesta.data;\n    } catch (error) {\n      console.error(`Error al obtener tarea con ID ${id}:`, error);\n      throw error;\n    }\n  },\n  crear: async datosTarea => {\n    try {\n      const api = configurarAxios();\n      const respuesta = await api.post('/tareas', datosTarea);\n      return respuesta.data;\n    } catch (error) {\n      console.error('Error al crear tarea:', error);\n      throw error;\n    }\n  },\n  actualizar: async (id, datosTarea) => {\n    try {\n      const api = configurarAxios();\n      const respuesta = await api.put(`/tareas/${id}`, datosTarea);\n      return respuesta.data;\n    } catch (error) {\n      console.error(`Error al actualizar tarea con ID ${id}:`, error);\n      throw error;\n    }\n  },\n  eliminar: async id => {\n    try {\n      const api = configurarAxios();\n      const respuesta = await api.delete(`/tareas/${id}`);\n      return respuesta.data;\n    } catch (error) {\n      console.error(`Error al eliminar tarea con ID ${id}:`, error);\n      throw error;\n    }\n  }\n};\n\n// Servicios para contactos\nexport const servicioContactos = {\n  obtenerTodos: async (filtros = {}) => {\n    try {\n      const api = configurarAxios();\n      const respuesta = await api.get('/contactos', {\n        params: filtros\n      });\n      return respuesta.data;\n    } catch (error) {\n      console.error('Error al obtener contactos:', error);\n      throw error;\n    }\n  },\n  obtenerPorId: async id => {\n    try {\n      const api = configurarAxios();\n      const respuesta = await api.get(`/contactos/${id}`);\n      return respuesta.data;\n    } catch (error) {\n      console.error(`Error al obtener contacto con ID ${id}:`, error);\n      throw error;\n    }\n  },\n  crear: async datosContacto => {\n    try {\n      const api = configurarAxios();\n      const respuesta = await api.post('/contactos', datosContacto);\n      return respuesta.data;\n    } catch (error) {\n      console.error('Error al crear contacto:', error);\n      throw error;\n    }\n  },\n  actualizar: async (id, datosContacto) => {\n    try {\n      const api = configurarAxios();\n      const respuesta = await api.put(`/contactos/${id}`, datosContacto);\n      return respuesta.data;\n    } catch (error) {\n      console.error(`Error al actualizar contacto con ID ${id}:`, error);\n      throw error;\n    }\n  },\n  eliminar: async id => {\n    try {\n      const api = configurarAxios();\n      const respuesta = await api.delete(`/contactos/${id}`);\n      return respuesta.data;\n    } catch (error) {\n      console.error(`Error al eliminar contacto con ID ${id}:`, error);\n      throw error;\n    }\n  }\n};\n\n// Servicios para proyectos\nexport const servicioProyectos = {\n  obtenerTodos: async (filtros = {}) => {\n    try {\n      const api = configurarAxios();\n      const respuesta = await api.get('/proyectos', {\n        params: filtros\n      });\n      return respuesta.data;\n    } catch (error) {\n      console.error('Error al obtener proyectos:', error);\n      throw error;\n    }\n  },\n  obtenerPorId: async id => {\n    try {\n      const api = configurarAxios();\n      const respuesta = await api.get(`/proyectos/${id}`);\n      return respuesta.data;\n    } catch (error) {\n      console.error(`Error al obtener proyecto con ID ${id}:`, error);\n      throw error;\n    }\n  },\n  crear: async datosProyecto => {\n    try {\n      const api = configurarAxios();\n      const respuesta = await api.post('/proyectos', datosProyecto);\n      return respuesta.data;\n    } catch (error) {\n      console.error('Error al crear proyecto:', error);\n      throw error;\n    }\n  },\n  actualizar: async (id, datosProyecto) => {\n    try {\n      const api = configurarAxios();\n      const respuesta = await api.put(`/proyectos/${id}`, datosProyecto);\n      return respuesta.data;\n    } catch (error) {\n      console.error(`Error al actualizar proyecto con ID ${id}:`, error);\n      throw error;\n    }\n  },\n  eliminar: async id => {\n    try {\n      const api = configurarAxios();\n      const respuesta = await api.delete(`/proyectos/${id}`);\n      return respuesta.data;\n    } catch (error) {\n      console.error(`Error al eliminar proyecto con ID ${id}:`, error);\n      throw error;\n    }\n  }\n};\n\n// Servicios para eventos del calendario\nexport const servicioEventos = {\n  obtenerTodos: async (filtros = {}) => {\n    try {\n      const api = configurarAxios();\n      const respuesta = await api.get('/eventos', {\n        params: filtros\n      });\n      return respuesta.data;\n    } catch (error) {\n      console.error('Error al obtener eventos:', error);\n      throw error;\n    }\n  },\n  obtenerPorId: async id => {\n    try {\n      const api = configurarAxios();\n      const respuesta = await api.get(`/eventos/${id}`);\n      return respuesta.data;\n    } catch (error) {\n      console.error(`Error al obtener evento con ID ${id}:`, error);\n      throw error;\n    }\n  },\n  crear: async datosEvento => {\n    try {\n      const api = configurarAxios();\n      const respuesta = await api.post('/eventos', datosEvento);\n      return respuesta.data;\n    } catch (error) {\n      console.error('Error al crear evento:', error);\n      throw error;\n    }\n  },\n  actualizar: async (id, datosEvento) => {\n    try {\n      const api = configurarAxios();\n      const respuesta = await api.put(`/eventos/${id}`, datosEvento);\n      return respuesta.data;\n    } catch (error) {\n      console.error(`Error al actualizar evento con ID ${id}:`, error);\n      throw error;\n    }\n  },\n  eliminar: async id => {\n    try {\n      const api = configurarAxios();\n      const respuesta = await api.delete(`/eventos/${id}`);\n      return respuesta.data;\n    } catch (error) {\n      console.error(`Error al eliminar evento con ID ${id}:`, error);\n      throw error;\n    }\n  }\n};\n\n// Servicios para usuarios (clientes y trabajadores)\nexport const servicioUsuarios = {\n  obtenerTodos: async (filtros = {}) => {\n    try {\n      const api = configurarAxios();\n      const respuesta = await api.get('/usuarios', {\n        params: filtros\n      });\n      return respuesta.data;\n    } catch (error) {\n      console.error('Error al obtener usuarios:', error);\n      throw error;\n    }\n  },\n  obtenerPorId: async id => {\n    try {\n      const api = configurarAxios();\n      const respuesta = await api.get(`/usuarios/${id}`);\n      return respuesta.data;\n    } catch (error) {\n      console.error(`Error al obtener usuario con ID ${id}:`, error);\n      throw error;\n    }\n  },\n  crear: async datosUsuario => {\n    try {\n      const api = configurarAxios();\n      const respuesta = await api.post('/usuarios', datosUsuario);\n      return respuesta.data;\n    } catch (error) {\n      console.error('Error al crear usuario:', error);\n      throw error;\n    }\n  },\n  actualizar: async (id, datosUsuario) => {\n    try {\n      const api = configurarAxios();\n      const respuesta = await api.put(`/usuarios/${id}`, datosUsuario);\n      return respuesta.data;\n    } catch (error) {\n      console.error(`Error al actualizar usuario con ID ${id}:`, error);\n      throw error;\n    }\n  },\n  eliminar: async id => {\n    try {\n      const api = configurarAxios();\n      const respuesta = await api.delete(`/usuarios/${id}`);\n      return respuesta.data;\n    } catch (error) {\n      console.error(`Error al eliminar usuario con ID ${id}:`, error);\n      throw error;\n    }\n  }\n};\n\n// Servicios para autenticación\nexport const servicioAutenticacion = {\n  iniciarSesion: async credenciales => {\n    try {\n      const respuesta = await axios.post(`${API_URL}/auth/login`, credenciales);\n\n      // Guardar el token en localStorage\n      if (respuesta.data.token) {\n        localStorage.setItem('token', respuesta.data.token);\n        localStorage.setItem('usuario', JSON.stringify(respuesta.data.usuario));\n      }\n      return respuesta.data;\n    } catch (error) {\n      console.error('Error al iniciar sesión:', error);\n      throw error;\n    }\n  },\n  registrar: async datosUsuario => {\n    try {\n      const respuesta = await axios.post(`${API_URL}/auth/registro`, datosUsuario);\n\n      // Guardar el token en localStorage si el registro incluye inicio de sesión automático\n      if (respuesta.data.token) {\n        localStorage.setItem('token', respuesta.data.token);\n        localStorage.setItem('usuario', JSON.stringify(respuesta.data.usuario));\n      }\n      return respuesta.data;\n    } catch (error) {\n      console.error('Error al registrar usuario:', error);\n      throw error;\n    }\n  },\n  cerrarSesion: () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('usuario');\n  },\n  obtenerUsuarioActual: () => {\n    const usuarioGuardado = localStorage.getItem('usuario');\n    return usuarioGuardado ? JSON.parse(usuarioGuardado) : null;\n  },\n  estaAutenticado: () => {\n    return !!localStorage.getItem('token');\n  }\n};\n\n// Exportar todos los servicios juntos\nexport default {\n  tareas: servicioTareas,\n  contactos: servicioContactos,\n  proyectos: servicioProyectos,\n  eventos: servicioEventos,\n  usuarios: servicioUsuarios,\n  autenticacion: servicioAutenticacion\n};","map":{"version":3,"names":["axios","API_URL","configurarAxios","token","localStorage","getItem","create","baseURL","headers","servicioTareas","obtenerTodas","filtros","api","respuesta","get","params","data","error","console","obtenerPorId","id","crear","datosTarea","post","actualizar","put","eliminar","delete","servicioContactos","obtenerTodos","datosContacto","servicioProyectos","datosProyecto","servicioEventos","datosEvento","servicioUsuarios","datosUsuario","servicioAutenticacion","iniciarSesion","credenciales","setItem","JSON","stringify","usuario","registrar","cerrarSesion","removeItem","obtenerUsuarioActual","usuarioGuardado","parse","estaAutenticado","tareas","contactos","proyectos","eventos","usuarios","autenticacion"],"sources":["C:/Users/andre/Desktop/ProyectoAndres/alhambraCrm/frontend_react/src/servicios/api.js"],"sourcesContent":["import axios from 'axios';\n\n// URL base de la API\nconst API_URL = 'http://localhost/alhambraCrm/backend_php/api';\n\n// Configuración de axios con token de autenticación\nconst configurarAxios = () => {\n  const token = localStorage.getItem('token');\n  \n  return axios.create({\n    baseURL: API_URL,\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': token ? `Bearer ${token}` : ''\n    }\n  });\n};\n\n// Servicios para tareas\nexport const servicioTareas = {\n  obtenerTodas: async (filtros = {}) => {\n    try {\n      const api = configurarAxios();\n      const respuesta = await api.get('/tareas', { params: filtros });\n      return respuesta.data;\n    } catch (error) {\n      console.error('Error al obtener tareas:', error);\n      throw error;\n    }\n  },\n  \n  obtenerPorId: async (id) => {\n    try {\n      const api = configurarAxios();\n      const respuesta = await api.get(`/tareas/${id}`);\n      return respuesta.data;\n    } catch (error) {\n      console.error(`Error al obtener tarea con ID ${id}:`, error);\n      throw error;\n    }\n  },\n  \n  crear: async (datosTarea) => {\n    try {\n      const api = configurarAxios();\n      const respuesta = await api.post('/tareas', datosTarea);\n      return respuesta.data;\n    } catch (error) {\n      console.error('Error al crear tarea:', error);\n      throw error;\n    }\n  },\n  \n  actualizar: async (id, datosTarea) => {\n    try {\n      const api = configurarAxios();\n      const respuesta = await api.put(`/tareas/${id}`, datosTarea);\n      return respuesta.data;\n    } catch (error) {\n      console.error(`Error al actualizar tarea con ID ${id}:`, error);\n      throw error;\n    }\n  },\n  \n  eliminar: async (id) => {\n    try {\n      const api = configurarAxios();\n      const respuesta = await api.delete(`/tareas/${id}`);\n      return respuesta.data;\n    } catch (error) {\n      console.error(`Error al eliminar tarea con ID ${id}:`, error);\n      throw error;\n    }\n  }\n};\n\n// Servicios para contactos\nexport const servicioContactos = {\n  obtenerTodos: async (filtros = {}) => {\n    try {\n      const api = configurarAxios();\n      const respuesta = await api.get('/contactos', { params: filtros });\n      return respuesta.data;\n    } catch (error) {\n      console.error('Error al obtener contactos:', error);\n      throw error;\n    }\n  },\n  \n  obtenerPorId: async (id) => {\n    try {\n      const api = configurarAxios();\n      const respuesta = await api.get(`/contactos/${id}`);\n      return respuesta.data;\n    } catch (error) {\n      console.error(`Error al obtener contacto con ID ${id}:`, error);\n      throw error;\n    }\n  },\n  \n  crear: async (datosContacto) => {\n    try {\n      const api = configurarAxios();\n      const respuesta = await api.post('/contactos', datosContacto);\n      return respuesta.data;\n    } catch (error) {\n      console.error('Error al crear contacto:', error);\n      throw error;\n    }\n  },\n  \n  actualizar: async (id, datosContacto) => {\n    try {\n      const api = configurarAxios();\n      const respuesta = await api.put(`/contactos/${id}`, datosContacto);\n      return respuesta.data;\n    } catch (error) {\n      console.error(`Error al actualizar contacto con ID ${id}:`, error);\n      throw error;\n    }\n  },\n  \n  eliminar: async (id) => {\n    try {\n      const api = configurarAxios();\n      const respuesta = await api.delete(`/contactos/${id}`);\n      return respuesta.data;\n    } catch (error) {\n      console.error(`Error al eliminar contacto con ID ${id}:`, error);\n      throw error;\n    }\n  }\n};\n\n// Servicios para proyectos\nexport const servicioProyectos = {\n  obtenerTodos: async (filtros = {}) => {\n    try {\n      const api = configurarAxios();\n      const respuesta = await api.get('/proyectos', { params: filtros });\n      return respuesta.data;\n    } catch (error) {\n      console.error('Error al obtener proyectos:', error);\n      throw error;\n    }\n  },\n  \n  obtenerPorId: async (id) => {\n    try {\n      const api = configurarAxios();\n      const respuesta = await api.get(`/proyectos/${id}`);\n      return respuesta.data;\n    } catch (error) {\n      console.error(`Error al obtener proyecto con ID ${id}:`, error);\n      throw error;\n    }\n  },\n  \n  crear: async (datosProyecto) => {\n    try {\n      const api = configurarAxios();\n      const respuesta = await api.post('/proyectos', datosProyecto);\n      return respuesta.data;\n    } catch (error) {\n      console.error('Error al crear proyecto:', error);\n      throw error;\n    }\n  },\n  \n  actualizar: async (id, datosProyecto) => {\n    try {\n      const api = configurarAxios();\n      const respuesta = await api.put(`/proyectos/${id}`, datosProyecto);\n      return respuesta.data;\n    } catch (error) {\n      console.error(`Error al actualizar proyecto con ID ${id}:`, error);\n      throw error;\n    }\n  },\n  \n  eliminar: async (id) => {\n    try {\n      const api = configurarAxios();\n      const respuesta = await api.delete(`/proyectos/${id}`);\n      return respuesta.data;\n    } catch (error) {\n      console.error(`Error al eliminar proyecto con ID ${id}:`, error);\n      throw error;\n    }\n  }\n};\n\n// Servicios para eventos del calendario\nexport const servicioEventos = {\n  obtenerTodos: async (filtros = {}) => {\n    try {\n      const api = configurarAxios();\n      const respuesta = await api.get('/eventos', { params: filtros });\n      return respuesta.data;\n    } catch (error) {\n      console.error('Error al obtener eventos:', error);\n      throw error;\n    }\n  },\n  \n  obtenerPorId: async (id) => {\n    try {\n      const api = configurarAxios();\n      const respuesta = await api.get(`/eventos/${id}`);\n      return respuesta.data;\n    } catch (error) {\n      console.error(`Error al obtener evento con ID ${id}:`, error);\n      throw error;\n    }\n  },\n  \n  crear: async (datosEvento) => {\n    try {\n      const api = configurarAxios();\n      const respuesta = await api.post('/eventos', datosEvento);\n      return respuesta.data;\n    } catch (error) {\n      console.error('Error al crear evento:', error);\n      throw error;\n    }\n  },\n  \n  actualizar: async (id, datosEvento) => {\n    try {\n      const api = configurarAxios();\n      const respuesta = await api.put(`/eventos/${id}`, datosEvento);\n      return respuesta.data;\n    } catch (error) {\n      console.error(`Error al actualizar evento con ID ${id}:`, error);\n      throw error;\n    }\n  },\n  \n  eliminar: async (id) => {\n    try {\n      const api = configurarAxios();\n      const respuesta = await api.delete(`/eventos/${id}`);\n      return respuesta.data;\n    } catch (error) {\n      console.error(`Error al eliminar evento con ID ${id}:`, error);\n      throw error;\n    }\n  }\n};\n\n// Servicios para usuarios (clientes y trabajadores)\nexport const servicioUsuarios = {\n  obtenerTodos: async (filtros = {}) => {\n    try {\n      const api = configurarAxios();\n      const respuesta = await api.get('/usuarios', { params: filtros });\n      return respuesta.data;\n    } catch (error) {\n      console.error('Error al obtener usuarios:', error);\n      throw error;\n    }\n  },\n  \n  obtenerPorId: async (id) => {\n    try {\n      const api = configurarAxios();\n      const respuesta = await api.get(`/usuarios/${id}`);\n      return respuesta.data;\n    } catch (error) {\n      console.error(`Error al obtener usuario con ID ${id}:`, error);\n      throw error;\n    }\n  },\n  \n  crear: async (datosUsuario) => {\n    try {\n      const api = configurarAxios();\n      const respuesta = await api.post('/usuarios', datosUsuario);\n      return respuesta.data;\n    } catch (error) {\n      console.error('Error al crear usuario:', error);\n      throw error;\n    }\n  },\n  \n  actualizar: async (id, datosUsuario) => {\n    try {\n      const api = configurarAxios();\n      const respuesta = await api.put(`/usuarios/${id}`, datosUsuario);\n      return respuesta.data;\n    } catch (error) {\n      console.error(`Error al actualizar usuario con ID ${id}:`, error);\n      throw error;\n    }\n  },\n  \n  eliminar: async (id) => {\n    try {\n      const api = configurarAxios();\n      const respuesta = await api.delete(`/usuarios/${id}`);\n      return respuesta.data;\n    } catch (error) {\n      console.error(`Error al eliminar usuario con ID ${id}:`, error);\n      throw error;\n    }\n  }\n};\n\n// Servicios para autenticación\nexport const servicioAutenticacion = {\n  iniciarSesion: async (credenciales) => {\n    try {\n      const respuesta = await axios.post(`${API_URL}/auth/login`, credenciales);\n      \n      // Guardar el token en localStorage\n      if (respuesta.data.token) {\n        localStorage.setItem('token', respuesta.data.token);\n        localStorage.setItem('usuario', JSON.stringify(respuesta.data.usuario));\n      }\n      \n      return respuesta.data;\n    } catch (error) {\n      console.error('Error al iniciar sesión:', error);\n      throw error;\n    }\n  },\n  \n  registrar: async (datosUsuario) => {\n    try {\n      const respuesta = await axios.post(`${API_URL}/auth/registro`, datosUsuario);\n      \n      // Guardar el token en localStorage si el registro incluye inicio de sesión automático\n      if (respuesta.data.token) {\n        localStorage.setItem('token', respuesta.data.token);\n        localStorage.setItem('usuario', JSON.stringify(respuesta.data.usuario));\n      }\n      \n      return respuesta.data;\n    } catch (error) {\n      console.error('Error al registrar usuario:', error);\n      throw error;\n    }\n  },\n  \n  cerrarSesion: () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('usuario');\n  },\n  \n  obtenerUsuarioActual: () => {\n    const usuarioGuardado = localStorage.getItem('usuario');\n    return usuarioGuardado ? JSON.parse(usuarioGuardado) : null;\n  },\n  \n  estaAutenticado: () => {\n    return !!localStorage.getItem('token');\n  }\n};\n\n// Exportar todos los servicios juntos\nexport default {\n  tareas: servicioTareas,\n  contactos: servicioContactos,\n  proyectos: servicioProyectos,\n  eventos: servicioEventos,\n  usuarios: servicioUsuarios,\n  autenticacion: servicioAutenticacion\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}