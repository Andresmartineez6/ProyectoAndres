{"ast":null,"code":"import jsPDF from 'jspdf';\nimport 'jspdf-autotable';\n\n/**\n * Utilidad para exportar informes en formato PDF\n */\nexport const exportarInformePDF = informe => {\n  // Crear nueva instancia de PDF\n  const doc = new jsPDF();\n\n  // Configurar fuentes y colores\n  const colorPrimario = '#3498db';\n  const colorSecundario = '#2ecc71';\n\n  // Añadir encabezado con logo y título\n  doc.setFillColor(colorPrimario);\n  doc.rect(0, 0, 210, 30, 'F');\n\n  // Título del informe\n  doc.setFont('helvetica', 'bold');\n  doc.setTextColor(255, 255, 255);\n  doc.setFontSize(22);\n  doc.text('AlhambraCRM', 105, 15, {\n    align: 'center'\n  });\n\n  // Subtítulo\n  doc.setFontSize(14);\n  doc.text('Informe: ' + informe.titulo, 105, 25, {\n    align: 'center'\n  });\n\n  // Información del informe\n  doc.setTextColor(0, 0, 0);\n  doc.setFontSize(12);\n  doc.setFont('helvetica', 'normal');\n\n  // Metadatos del informe\n  doc.text('Fecha de creación: ' + formatearFecha(informe.fechaCreacion), 20, 45);\n  doc.text('Última actualización: ' + formatearFecha(informe.fechaActualizacion), 20, 55);\n  doc.text('Autor: ' + informe.autor, 20, 65);\n  doc.text('Tipo: ' + informe.tipo, 20, 75);\n  if (informe.proyecto) {\n    doc.text('Proyecto: ' + informe.proyecto, 20, 85);\n  }\n\n  // Añadir descripción\n  doc.setFontSize(14);\n  doc.setFont('helvetica', 'bold');\n  doc.text('Descripción', 20, 100);\n  doc.setFontSize(12);\n  doc.setFont('helvetica', 'normal');\n\n  // Dividir descripción en líneas para evitar que se salga de la página\n  const descripcionLineas = doc.splitTextToSize(informe.descripcion, 170);\n  doc.text(descripcionLineas, 20, 110);\n\n  // Añadir contenido principal\n  doc.setFontSize(14);\n  doc.setFont('helvetica', 'bold');\n  doc.text('Contenido', 20, 130 + descripcionLineas.length * 5);\n  doc.setFontSize(12);\n  doc.setFont('helvetica', 'normal');\n\n  // Dividir contenido en líneas\n  const contenidoLineas = doc.splitTextToSize(informe.contenido, 170);\n  doc.text(contenidoLineas, 20, 140 + descripcionLineas.length * 5);\n\n  // Añadir pie de página\n  const totalPaginas = doc.internal.getNumberOfPages();\n  for (let i = 1; i <= totalPaginas; i++) {\n    doc.setPage(i);\n    doc.setFontSize(10);\n    doc.setTextColor(150, 150, 150);\n\n    // Pie de página con fecha y número de página\n    const fechaActual = new Date().toLocaleDateString('es-ES');\n    doc.text(`AlhambraCRM - Generado el ${fechaActual}`, 20, 285);\n    doc.text(`Página ${i} de ${totalPaginas}`, 180, 285);\n  }\n\n  // Guardar el PDF con el nombre del informe\n  doc.save(`Informe_${informe.titulo.replace(/\\s+/g, '_')}.pdf`);\n};\n\n/**\n * Utilidad para exportar lista de informes en formato PDF\n */\nexport const exportarListaInformesPDF = (informes, filtros = {}) => {\n  // Crear nueva instancia de PDF\n  const doc = new jsPDF();\n\n  // Configurar fuentes y colores\n  const colorPrimario = '#3498db';\n\n  // Añadir encabezado con logo y título\n  doc.setFillColor(colorPrimario);\n  doc.rect(0, 0, 210, 30, 'F');\n\n  // Título\n  doc.setFont('helvetica', 'bold');\n  doc.setTextColor(255, 255, 255);\n  doc.setFontSize(22);\n  doc.text('AlhambraCRM', 105, 15, {\n    align: 'center'\n  });\n\n  // Subtítulo\n  doc.setFontSize(14);\n  doc.text('Listado de Informes', 105, 25, {\n    align: 'center'\n  });\n\n  // Información de filtros\n  doc.setTextColor(0, 0, 0);\n  doc.setFontSize(12);\n  doc.setFont('helvetica', 'normal');\n  let textoFiltros = 'Todos los informes';\n  if (filtros.tipo && filtros.tipo !== 'todos') {\n    textoFiltros = `Tipo: ${filtros.tipo}`;\n  }\n  doc.text(`Filtros aplicados: ${textoFiltros}`, 20, 45);\n  doc.text(`Total de informes: ${informes.length}`, 20, 55);\n  doc.text(`Fecha de generación: ${new Date().toLocaleDateString('es-ES')}`, 20, 65);\n\n  // Crear tabla con los informes\n  const columnas = [{\n    header: 'Título',\n    dataKey: 'titulo'\n  }, {\n    header: 'Tipo',\n    dataKey: 'tipo'\n  }, {\n    header: 'Autor',\n    dataKey: 'autor'\n  }, {\n    header: 'Fecha',\n    dataKey: 'fechaActualizacion'\n  }, {\n    header: 'Proyecto',\n    dataKey: 'proyecto'\n  }];\n  const filas = informes.map(informe => ({\n    titulo: informe.titulo,\n    tipo: informe.tipo,\n    autor: informe.autor,\n    fechaActualizacion: formatearFecha(informe.fechaActualizacion),\n    proyecto: informe.proyecto || '-'\n  }));\n  doc.autoTable({\n    startY: 75,\n    head: [columnas.map(col => col.header)],\n    body: filas.map(fila => columnas.map(col => fila[col.dataKey])),\n    theme: 'grid',\n    headStyles: {\n      fillColor: colorPrimario,\n      textColor: [255, 255, 255],\n      fontStyle: 'bold'\n    },\n    alternateRowStyles: {\n      fillColor: [240, 240, 240]\n    },\n    margin: {\n      top: 75\n    }\n  });\n\n  // Añadir pie de página\n  const totalPaginas = doc.internal.getNumberOfPages();\n  for (let i = 1; i <= totalPaginas; i++) {\n    doc.setPage(i);\n    doc.setFontSize(10);\n    doc.setTextColor(150, 150, 150);\n\n    // Pie de página con fecha y número de página\n    const fechaActual = new Date().toLocaleDateString('es-ES');\n    doc.text(`AlhambraCRM - Generado el ${fechaActual}`, 20, 285);\n    doc.text(`Página ${i} de ${totalPaginas}`, 180, 285);\n  }\n\n  // Guardar el PDF\n  doc.save('Listado_Informes.pdf');\n};\n\n/**\n * Utilidad para exportar informes en formato Excel\n * En una implementación real, esto se haría con una biblioteca como xlsx\n * Por ahora, simplemente mostramos un mensaje de que esta funcionalidad está en desarrollo\n */\nexport const exportarInformeExcel = informe => {\n  alert('La exportación a Excel está en desarrollo. Estará disponible próximamente.');\n};\n\n/**\n * Formatear fecha para mostrar en el PDF\n */\nconst formatearFecha = fechaStr => {\n  if (!fechaStr) return '-';\n  const fecha = new Date(fechaStr);\n  return fecha.toLocaleDateString('es-ES', {\n    day: '2-digit',\n    month: '2-digit',\n    year: 'numeric'\n  });\n};\nexport default {\n  exportarInformePDF,\n  exportarListaInformesPDF,\n  exportarInformeExcel\n};","map":{"version":3,"names":["jsPDF","exportarInformePDF","informe","doc","colorPrimario","colorSecundario","setFillColor","rect","setFont","setTextColor","setFontSize","text","align","titulo","formatearFecha","fechaCreacion","fechaActualizacion","autor","tipo","proyecto","descripcionLineas","splitTextToSize","descripcion","length","contenidoLineas","contenido","totalPaginas","internal","getNumberOfPages","i","setPage","fechaActual","Date","toLocaleDateString","save","replace","exportarListaInformesPDF","informes","filtros","textoFiltros","columnas","header","dataKey","filas","map","autoTable","startY","head","col","body","fila","theme","headStyles","fillColor","textColor","fontStyle","alternateRowStyles","margin","top","exportarInformeExcel","alert","fechaStr","fecha","day","month","year"],"sources":["C:/Users/andre/Desktop/ProyectoAndres/alhambraCrm/frontend_react/src/utilidades/exportarPDF.js"],"sourcesContent":["import jsPDF from 'jspdf';\nimport 'jspdf-autotable';\n\n/**\n * Utilidad para exportar informes en formato PDF\n */\nexport const exportarInformePDF = (informe) => {\n  // Crear nueva instancia de PDF\n  const doc = new jsPDF();\n  \n  // Configurar fuentes y colores\n  const colorPrimario = '#3498db';\n  const colorSecundario = '#2ecc71';\n  \n  // Añadir encabezado con logo y título\n  doc.setFillColor(colorPrimario);\n  doc.rect(0, 0, 210, 30, 'F');\n  \n  // Título del informe\n  doc.setFont('helvetica', 'bold');\n  doc.setTextColor(255, 255, 255);\n  doc.setFontSize(22);\n  doc.text('AlhambraCRM', 105, 15, { align: 'center' });\n  \n  // Subtítulo\n  doc.setFontSize(14);\n  doc.text('Informe: ' + informe.titulo, 105, 25, { align: 'center' });\n  \n  // Información del informe\n  doc.setTextColor(0, 0, 0);\n  doc.setFontSize(12);\n  doc.setFont('helvetica', 'normal');\n  \n  // Metadatos del informe\n  doc.text('Fecha de creación: ' + formatearFecha(informe.fechaCreacion), 20, 45);\n  doc.text('Última actualización: ' + formatearFecha(informe.fechaActualizacion), 20, 55);\n  doc.text('Autor: ' + informe.autor, 20, 65);\n  doc.text('Tipo: ' + informe.tipo, 20, 75);\n  \n  if (informe.proyecto) {\n    doc.text('Proyecto: ' + informe.proyecto, 20, 85);\n  }\n  \n  // Añadir descripción\n  doc.setFontSize(14);\n  doc.setFont('helvetica', 'bold');\n  doc.text('Descripción', 20, 100);\n  \n  doc.setFontSize(12);\n  doc.setFont('helvetica', 'normal');\n  \n  // Dividir descripción en líneas para evitar que se salga de la página\n  const descripcionLineas = doc.splitTextToSize(informe.descripcion, 170);\n  doc.text(descripcionLineas, 20, 110);\n  \n  // Añadir contenido principal\n  doc.setFontSize(14);\n  doc.setFont('helvetica', 'bold');\n  doc.text('Contenido', 20, 130 + (descripcionLineas.length * 5));\n  \n  doc.setFontSize(12);\n  doc.setFont('helvetica', 'normal');\n  \n  // Dividir contenido en líneas\n  const contenidoLineas = doc.splitTextToSize(informe.contenido, 170);\n  doc.text(contenidoLineas, 20, 140 + (descripcionLineas.length * 5));\n  \n  // Añadir pie de página\n  const totalPaginas = doc.internal.getNumberOfPages();\n  \n  for (let i = 1; i <= totalPaginas; i++) {\n    doc.setPage(i);\n    doc.setFontSize(10);\n    doc.setTextColor(150, 150, 150);\n    \n    // Pie de página con fecha y número de página\n    const fechaActual = new Date().toLocaleDateString('es-ES');\n    doc.text(`AlhambraCRM - Generado el ${fechaActual}`, 20, 285);\n    doc.text(`Página ${i} de ${totalPaginas}`, 180, 285);\n  }\n  \n  // Guardar el PDF con el nombre del informe\n  doc.save(`Informe_${informe.titulo.replace(/\\s+/g, '_')}.pdf`);\n};\n\n/**\n * Utilidad para exportar lista de informes en formato PDF\n */\nexport const exportarListaInformesPDF = (informes, filtros = {}) => {\n  // Crear nueva instancia de PDF\n  const doc = new jsPDF();\n  \n  // Configurar fuentes y colores\n  const colorPrimario = '#3498db';\n  \n  // Añadir encabezado con logo y título\n  doc.setFillColor(colorPrimario);\n  doc.rect(0, 0, 210, 30, 'F');\n  \n  // Título\n  doc.setFont('helvetica', 'bold');\n  doc.setTextColor(255, 255, 255);\n  doc.setFontSize(22);\n  doc.text('AlhambraCRM', 105, 15, { align: 'center' });\n  \n  // Subtítulo\n  doc.setFontSize(14);\n  doc.text('Listado de Informes', 105, 25, { align: 'center' });\n  \n  // Información de filtros\n  doc.setTextColor(0, 0, 0);\n  doc.setFontSize(12);\n  doc.setFont('helvetica', 'normal');\n  \n  let textoFiltros = 'Todos los informes';\n  \n  if (filtros.tipo && filtros.tipo !== 'todos') {\n    textoFiltros = `Tipo: ${filtros.tipo}`;\n  }\n  \n  doc.text(`Filtros aplicados: ${textoFiltros}`, 20, 45);\n  doc.text(`Total de informes: ${informes.length}`, 20, 55);\n  doc.text(`Fecha de generación: ${new Date().toLocaleDateString('es-ES')}`, 20, 65);\n  \n  // Crear tabla con los informes\n  const columnas = [\n    { header: 'Título', dataKey: 'titulo' },\n    { header: 'Tipo', dataKey: 'tipo' },\n    { header: 'Autor', dataKey: 'autor' },\n    { header: 'Fecha', dataKey: 'fechaActualizacion' },\n    { header: 'Proyecto', dataKey: 'proyecto' }\n  ];\n  \n  const filas = informes.map(informe => ({\n    titulo: informe.titulo,\n    tipo: informe.tipo,\n    autor: informe.autor,\n    fechaActualizacion: formatearFecha(informe.fechaActualizacion),\n    proyecto: informe.proyecto || '-'\n  }));\n  \n  doc.autoTable({\n    startY: 75,\n    head: [columnas.map(col => col.header)],\n    body: filas.map(fila => columnas.map(col => fila[col.dataKey])),\n    theme: 'grid',\n    headStyles: {\n      fillColor: colorPrimario,\n      textColor: [255, 255, 255],\n      fontStyle: 'bold'\n    },\n    alternateRowStyles: {\n      fillColor: [240, 240, 240]\n    },\n    margin: { top: 75 }\n  });\n  \n  // Añadir pie de página\n  const totalPaginas = doc.internal.getNumberOfPages();\n  \n  for (let i = 1; i <= totalPaginas; i++) {\n    doc.setPage(i);\n    doc.setFontSize(10);\n    doc.setTextColor(150, 150, 150);\n    \n    // Pie de página con fecha y número de página\n    const fechaActual = new Date().toLocaleDateString('es-ES');\n    doc.text(`AlhambraCRM - Generado el ${fechaActual}`, 20, 285);\n    doc.text(`Página ${i} de ${totalPaginas}`, 180, 285);\n  }\n  \n  // Guardar el PDF\n  doc.save('Listado_Informes.pdf');\n};\n\n/**\n * Utilidad para exportar informes en formato Excel\n * En una implementación real, esto se haría con una biblioteca como xlsx\n * Por ahora, simplemente mostramos un mensaje de que esta funcionalidad está en desarrollo\n */\nexport const exportarInformeExcel = (informe) => {\n  alert('La exportación a Excel está en desarrollo. Estará disponible próximamente.');\n};\n\n/**\n * Formatear fecha para mostrar en el PDF\n */\nconst formatearFecha = (fechaStr) => {\n  if (!fechaStr) return '-';\n  \n  const fecha = new Date(fechaStr);\n  return fecha.toLocaleDateString('es-ES', {\n    day: '2-digit',\n    month: '2-digit',\n    year: 'numeric'\n  });\n};\n\nexport default {\n  exportarInformePDF,\n  exportarListaInformesPDF,\n  exportarInformeExcel\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}