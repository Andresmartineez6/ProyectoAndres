{"ast":null,"code":"import jsPDF from 'jspdf';\nimport 'jspdf-autotable';\n\n/**\n * Utilidad para exportar informes en formato PDF\n */\nexport const exportarInformePDF = informe => {\n  try {\n    // Crear nueva instancia de PDF\n    const doc = new jsPDF();\n\n    // Configurar fuentes y colores\n    const colorPrimario = '#3498db';\n    const colorSecundario = '#2ecc71';\n    const colorTexto = '#333333';\n    const colorFondo = '#f8f9fa';\n\n    // Añadir encabezado con logo y título\n    doc.setFillColor(colorPrimario);\n    doc.rect(0, 0, 210, 40, 'F');\n\n    // Título del informe\n    doc.setFont('helvetica', 'bold');\n    doc.setTextColor(255, 255, 255);\n    doc.setFontSize(28);\n    doc.text('AlhambraCRM', 105, 20, {\n      align: 'center'\n    });\n\n    // Subtítulo\n    doc.setFontSize(16);\n    doc.text(`Informe: ${informe.titulo || 'Sin título'}`, 105, 32, {\n      align: 'center'\n    });\n\n    // Añadir una franja decorativa\n    doc.setFillColor(colorSecundario);\n    doc.rect(0, 40, 210, 5, 'F');\n\n    // Información del informe - Sección de metadatos\n    doc.setTextColor(colorTexto);\n    doc.setFontSize(12);\n    doc.setFont('helvetica', 'bold');\n\n    // Crear un recuadro para los metadatos\n    doc.setFillColor(colorFondo);\n    doc.roundedRect(15, 55, 180, 70, 3, 3, 'F');\n\n    // Metadatos del informe\n    const fechaCreacion = formatearFecha(informe.fechaCreacion);\n    const fechaActualizacion = formatearFecha(informe.fechaActualizacion);\n    doc.setFont('helvetica', 'bold');\n    doc.text('Fecha de creación:', 25, 70);\n    doc.setFont('helvetica', 'normal');\n    doc.text(fechaCreacion, 90, 70);\n    doc.setFont('helvetica', 'bold');\n    doc.text('Última actualización:', 25, 85);\n    doc.setFont('helvetica', 'normal');\n    doc.text(fechaActualizacion, 90, 85);\n    doc.setFont('helvetica', 'bold');\n    doc.text('Autor:', 25, 100);\n    doc.setFont('helvetica', 'normal');\n    doc.text(informe.autor || 'No especificado', 90, 100);\n    doc.setFont('helvetica', 'bold');\n    doc.text('Tipo:', 25, 115);\n    doc.setFont('helvetica', 'normal');\n    doc.text(informe.tipo || 'No especificado', 90, 115);\n    if (informe.proyecto) {\n      doc.setFont('helvetica', 'bold');\n      doc.text('Proyecto:', 25, 130);\n      doc.setFont('helvetica', 'normal');\n      doc.text(informe.proyecto, 90, 130);\n    }\n\n    // Añadir descripción con un recuadro\n    doc.setFillColor(colorFondo);\n    doc.roundedRect(15, 140, 180, 50, 3, 3, 'F');\n    doc.setFontSize(14);\n    doc.setFont('helvetica', 'bold');\n    doc.setTextColor(colorPrimario);\n    doc.text('Descripción', 25, 155);\n    doc.setFontSize(12);\n    doc.setFont('helvetica', 'normal');\n    doc.setTextColor(colorTexto);\n\n    // Dividir descripción en líneas para evitar que se salga de la página\n    const descripcionLineas = doc.splitTextToSize(informe.descripcion || 'No hay descripción disponible', 160);\n    doc.text(descripcionLineas, 25, 170);\n\n    // Añadir contenido principal con un recuadro\n    doc.setFillColor(colorFondo);\n    doc.roundedRect(15, 200, 180, 70, 3, 3, 'F');\n    doc.setFontSize(14);\n    doc.setFont('helvetica', 'bold');\n    doc.setTextColor(colorPrimario);\n    doc.text('Contenido', 25, 215);\n    doc.setFontSize(12);\n    doc.setFont('helvetica', 'normal');\n    doc.setTextColor(colorTexto);\n\n    // Dividir contenido en líneas\n    const contenidoLineas = doc.splitTextToSize(informe.contenido || 'No hay contenido disponible', 160);\n    doc.text(contenidoLineas, 25, 230);\n\n    // Añadir pie de página\n    const totalPaginas = doc.internal.getNumberOfPages();\n    for (let i = 1; i <= totalPaginas; i++) {\n      doc.setPage(i);\n\n      // Añadir una franja decorativa en el pie de página\n      doc.setFillColor(colorPrimario);\n      doc.rect(0, 280, 210, 17, 'F');\n      doc.setFontSize(10);\n      doc.setTextColor(255, 255, 255);\n      doc.setFont('helvetica', 'normal');\n\n      // Pie de página con fecha y número de página\n      const fechaActual = new Date().toLocaleDateString('es-ES', {\n        day: '2-digit',\n        month: '2-digit',\n        year: 'numeric',\n        hour: '2-digit',\n        minute: '2-digit'\n      });\n      doc.text(`AlhambraCRM - Documento generado el ${fechaActual}`, 105, 290, {\n        align: 'center'\n      });\n      doc.text(`Página ${i} de ${totalPaginas}`, 180, 290);\n    }\n\n    // Guardar el PDF con el nombre del informe\n    doc.save(`Informe_${informe.titulo.replace(/\\s+/g, '_')}.pdf`);\n    return true;\n  } catch (error) {\n    console.error('Error al exportar informe a PDF:', error);\n    throw new Error('Error al generar el PDF del informe. Por favor, inténtalo de nuevo.');\n  }\n};\n\n/**\n * Utilidad para exportar lista de informes en formato PDF\n */\nexport const exportarListaInformesPDF = (informes, filtros = {}) => {\n  try {\n    console.log('Exportando lista de informes:', informes);\n\n    // Validar que informes sea un array\n    if (!Array.isArray(informes)) {\n      throw new Error('La lista de informes no es válida');\n    }\n\n    // Crear nueva instancia de PDF\n    const doc = new jsPDF();\n\n    // Configurar fuentes y colores\n    const colorPrimario = '#3498db';\n    const colorSecundario = '#2ecc71';\n    const colorTexto = '#333333';\n    const colorFondo = '#f8f9fa';\n\n    // Añadir encabezado con logo y título\n    doc.setFillColor(colorPrimario);\n    doc.rect(0, 0, 210, 40, 'F');\n\n    // Título\n    doc.setFont('helvetica', 'bold');\n    doc.setTextColor(255, 255, 255);\n    doc.setFontSize(28);\n    doc.text('AlhambraCRM', 105, 20, {\n      align: 'center'\n    });\n\n    // Subtítulo\n    doc.setFontSize(16);\n    doc.text('Listado de Informes', 105, 32, {\n      align: 'center'\n    });\n\n    // Añadir una franja decorativa\n    doc.setFillColor(colorSecundario);\n    doc.rect(0, 40, 210, 5, 'F');\n\n    // Información de filtros - Sección de metadatos\n    doc.setTextColor(colorTexto);\n    doc.setFontSize(12);\n\n    // Crear un recuadro para los metadatos\n    doc.setFillColor(colorFondo);\n    doc.roundedRect(15, 55, 180, 50, 3, 3, 'F');\n\n    // Información de filtros\n    let textoFiltros = 'Todos los informes';\n    if (filtros && filtros.tipo && filtros.tipo !== 'todos') {\n      textoFiltros = `Tipo: ${filtros.tipo}`;\n    }\n    doc.setFont('helvetica', 'bold');\n    doc.text('Filtros aplicados:', 25, 70);\n    doc.setFont('helvetica', 'normal');\n    doc.text(textoFiltros, 105, 70);\n    doc.setFont('helvetica', 'bold');\n    doc.text('Total de informes:', 25, 85);\n    doc.setFont('helvetica', 'normal');\n    doc.text(`${informes.length}`, 105, 85);\n    doc.setFont('helvetica', 'bold');\n    doc.text('Fecha de generación:', 25, 100);\n    doc.setFont('helvetica', 'normal');\n    const fechaGeneracion = new Date().toLocaleDateString('es-ES', {\n      day: '2-digit',\n      month: '2-digit',\n      year: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n    doc.text(fechaGeneracion, 105, 100);\n\n    // Título de la tabla\n    doc.setFontSize(14);\n    doc.setFont('helvetica', 'bold');\n    doc.setTextColor(colorPrimario);\n    doc.text('Detalle de Informes', 105, 120, {\n      align: 'center'\n    });\n\n    // Simplificar la tabla para evitar errores\n    try {\n      // Crear tabla básica con los informes\n      const columnas = [{\n        header: 'Título',\n        dataKey: 'titulo'\n      }, {\n        header: 'Tipo',\n        dataKey: 'tipo'\n      }, {\n        header: 'Autor',\n        dataKey: 'autor'\n      }];\n\n      // Preparar los datos simplificados para la tabla\n      const filas = informes.map(informe => [informe.titulo || 'Sin título', informe.tipo || 'Sin tipo', informe.autor || 'Sin autor']);\n\n      // Configuración básica de la tabla\n      doc.autoTable({\n        startY: 130,\n        head: [['Título', 'Tipo', 'Autor']],\n        body: filas,\n        theme: 'grid',\n        headStyles: {\n          fillColor: colorPrimario,\n          textColor: [255, 255, 255],\n          fontStyle: 'bold'\n        },\n        alternateRowStyles: {\n          fillColor: [240, 240, 240]\n        },\n        margin: {\n          top: 130,\n          right: 15,\n          bottom: 30,\n          left: 15\n        }\n      });\n    } catch (tableError) {\n      console.error('Error al generar la tabla:', tableError);\n\n      // Si falla la tabla, al menos mostramos una lista simple\n      doc.setFontSize(12);\n      doc.setFont('helvetica', 'normal');\n      doc.setTextColor(colorTexto);\n      doc.text('No se pudo generar la tabla. Lista simple de informes:', 20, 130);\n      let yPos = 145;\n      informes.forEach((informe, index) => {\n        doc.text(`${index + 1}. ${informe.titulo || 'Sin título'} (${informe.tipo || 'Sin tipo'})`, 25, yPos);\n        yPos += 10;\n\n        // Si llegamos al final de la página, creamos una nueva\n        if (yPos > 270) {\n          doc.addPage();\n          yPos = 20;\n        }\n      });\n    }\n\n    // Añadir pie de página\n    const totalPaginas = doc.internal.getNumberOfPages();\n    for (let i = 1; i <= totalPaginas; i++) {\n      doc.setPage(i);\n\n      // Añadir una franja decorativa en el pie de página\n      doc.setFillColor(colorPrimario);\n      doc.rect(0, 280, 210, 17, 'F');\n      doc.setFontSize(10);\n      doc.setTextColor(255, 255, 255);\n      doc.setFont('helvetica', 'normal');\n\n      // Pie de página con fecha y número de página\n      doc.text(`AlhambraCRM - Documento generado el ${fechaGeneracion}`, 105, 290, {\n        align: 'center'\n      });\n      doc.text(`Página ${i} de ${totalPaginas}`, 180, 290);\n    }\n\n    // Guardar el PDF\n    doc.save('Listado_Informes.pdf');\n    return true;\n  } catch (error) {\n    console.error('Error al exportar lista de informes a PDF:', error);\n    throw new Error(`Error al generar el PDF de la lista de informes: ${error.message}`);\n  }\n};\n\n/**\n * Utilidad para exportar informes en formato Excel\n * En una implementación real, esto se haría con una biblioteca como xlsx\n * Por ahora, simplemente mostramos un mensaje de que esta funcionalidad está en desarrollo\n */\nexport const exportarInformeExcel = informe => {\n  alert('La exportación a Excel está en desarrollo. Estará disponible próximamente.');\n};\n\n/**\n * Formatear fecha para mostrar en el PDF\n */\nconst formatearFecha = fechaStr => {\n  if (!fechaStr) return '-';\n  try {\n    const fecha = new Date(fechaStr);\n    if (isNaN(fecha.getTime())) return '-';\n    return fecha.toLocaleDateString('es-ES', {\n      day: '2-digit',\n      month: '2-digit',\n      year: 'numeric'\n    });\n  } catch (error) {\n    console.error('Error al formatear fecha:', error);\n    return '-';\n  }\n};\nexport default {\n  exportarInformePDF,\n  exportarListaInformesPDF,\n  exportarInformeExcel\n};","map":{"version":3,"names":["jsPDF","exportarInformePDF","informe","doc","colorPrimario","colorSecundario","colorTexto","colorFondo","setFillColor","rect","setFont","setTextColor","setFontSize","text","align","titulo","roundedRect","fechaCreacion","formatearFecha","fechaActualizacion","autor","tipo","proyecto","descripcionLineas","splitTextToSize","descripcion","contenidoLineas","contenido","totalPaginas","internal","getNumberOfPages","i","setPage","fechaActual","Date","toLocaleDateString","day","month","year","hour","minute","save","replace","error","console","Error","exportarListaInformesPDF","informes","filtros","log","Array","isArray","textoFiltros","length","fechaGeneracion","columnas","header","dataKey","filas","map","autoTable","startY","head","body","theme","headStyles","fillColor","textColor","fontStyle","alternateRowStyles","margin","top","right","bottom","left","tableError","yPos","forEach","index","addPage","message","exportarInformeExcel","alert","fechaStr","fecha","isNaN","getTime"],"sources":["C:/Users/andre/Desktop/ProyectoAndres/alhambraCrm/frontend_react/src/utilidades/exportarPDF.js"],"sourcesContent":["import jsPDF from 'jspdf';\nimport 'jspdf-autotable';\n\n/**\n * Utilidad para exportar informes en formato PDF\n */\nexport const exportarInformePDF = (informe) => {\n  try {\n    // Crear nueva instancia de PDF\n    const doc = new jsPDF();\n    \n    // Configurar fuentes y colores\n    const colorPrimario = '#3498db';\n    const colorSecundario = '#2ecc71';\n    const colorTexto = '#333333';\n    const colorFondo = '#f8f9fa';\n    \n    // Añadir encabezado con logo y título\n    doc.setFillColor(colorPrimario);\n    doc.rect(0, 0, 210, 40, 'F');\n    \n    // Título del informe\n    doc.setFont('helvetica', 'bold');\n    doc.setTextColor(255, 255, 255);\n    doc.setFontSize(28);\n    doc.text('AlhambraCRM', 105, 20, { align: 'center' });\n    \n    // Subtítulo\n    doc.setFontSize(16);\n    doc.text(`Informe: ${informe.titulo || 'Sin título'}`, 105, 32, { align: 'center' });\n    \n    // Añadir una franja decorativa\n    doc.setFillColor(colorSecundario);\n    doc.rect(0, 40, 210, 5, 'F');\n    \n    // Información del informe - Sección de metadatos\n    doc.setTextColor(colorTexto);\n    doc.setFontSize(12);\n    doc.setFont('helvetica', 'bold');\n    \n    // Crear un recuadro para los metadatos\n    doc.setFillColor(colorFondo);\n    doc.roundedRect(15, 55, 180, 70, 3, 3, 'F');\n    \n    // Metadatos del informe\n    const fechaCreacion = formatearFecha(informe.fechaCreacion);\n    const fechaActualizacion = formatearFecha(informe.fechaActualizacion);\n    \n    doc.setFont('helvetica', 'bold');\n    doc.text('Fecha de creación:', 25, 70);\n    doc.setFont('helvetica', 'normal');\n    doc.text(fechaCreacion, 90, 70);\n    \n    doc.setFont('helvetica', 'bold');\n    doc.text('Última actualización:', 25, 85);\n    doc.setFont('helvetica', 'normal');\n    doc.text(fechaActualizacion, 90, 85);\n    \n    doc.setFont('helvetica', 'bold');\n    doc.text('Autor:', 25, 100);\n    doc.setFont('helvetica', 'normal');\n    doc.text(informe.autor || 'No especificado', 90, 100);\n    \n    doc.setFont('helvetica', 'bold');\n    doc.text('Tipo:', 25, 115);\n    doc.setFont('helvetica', 'normal');\n    doc.text(informe.tipo || 'No especificado', 90, 115);\n    \n    if (informe.proyecto) {\n      doc.setFont('helvetica', 'bold');\n      doc.text('Proyecto:', 25, 130);\n      doc.setFont('helvetica', 'normal');\n      doc.text(informe.proyecto, 90, 130);\n    }\n    \n    // Añadir descripción con un recuadro\n    doc.setFillColor(colorFondo);\n    doc.roundedRect(15, 140, 180, 50, 3, 3, 'F');\n    \n    doc.setFontSize(14);\n    doc.setFont('helvetica', 'bold');\n    doc.setTextColor(colorPrimario);\n    doc.text('Descripción', 25, 155);\n    \n    doc.setFontSize(12);\n    doc.setFont('helvetica', 'normal');\n    doc.setTextColor(colorTexto);\n    \n    // Dividir descripción en líneas para evitar que se salga de la página\n    const descripcionLineas = doc.splitTextToSize(informe.descripcion || 'No hay descripción disponible', 160);\n    doc.text(descripcionLineas, 25, 170);\n    \n    // Añadir contenido principal con un recuadro\n    doc.setFillColor(colorFondo);\n    doc.roundedRect(15, 200, 180, 70, 3, 3, 'F');\n    \n    doc.setFontSize(14);\n    doc.setFont('helvetica', 'bold');\n    doc.setTextColor(colorPrimario);\n    doc.text('Contenido', 25, 215);\n    \n    doc.setFontSize(12);\n    doc.setFont('helvetica', 'normal');\n    doc.setTextColor(colorTexto);\n    \n    // Dividir contenido en líneas\n    const contenidoLineas = doc.splitTextToSize(informe.contenido || 'No hay contenido disponible', 160);\n    doc.text(contenidoLineas, 25, 230);\n    \n    // Añadir pie de página\n    const totalPaginas = doc.internal.getNumberOfPages();\n    \n    for (let i = 1; i <= totalPaginas; i++) {\n      doc.setPage(i);\n      \n      // Añadir una franja decorativa en el pie de página\n      doc.setFillColor(colorPrimario);\n      doc.rect(0, 280, 210, 17, 'F');\n      \n      doc.setFontSize(10);\n      doc.setTextColor(255, 255, 255);\n      doc.setFont('helvetica', 'normal');\n      \n      // Pie de página con fecha y número de página\n      const fechaActual = new Date().toLocaleDateString('es-ES', {\n        day: '2-digit',\n        month: '2-digit',\n        year: 'numeric',\n        hour: '2-digit',\n        minute: '2-digit'\n      });\n      \n      doc.text(`AlhambraCRM - Documento generado el ${fechaActual}`, 105, 290, { align: 'center' });\n      doc.text(`Página ${i} de ${totalPaginas}`, 180, 290);\n    }\n    \n    // Guardar el PDF con el nombre del informe\n    doc.save(`Informe_${informe.titulo.replace(/\\s+/g, '_')}.pdf`);\n    \n    return true;\n  } catch (error) {\n    console.error('Error al exportar informe a PDF:', error);\n    throw new Error('Error al generar el PDF del informe. Por favor, inténtalo de nuevo.');\n  }\n};\n\n/**\n * Utilidad para exportar lista de informes en formato PDF\n */\nexport const exportarListaInformesPDF = (informes, filtros = {}) => {\n  try {\n    console.log('Exportando lista de informes:', informes);\n    \n    // Validar que informes sea un array\n    if (!Array.isArray(informes)) {\n      throw new Error('La lista de informes no es válida');\n    }\n    \n    // Crear nueva instancia de PDF\n    const doc = new jsPDF();\n    \n    // Configurar fuentes y colores\n    const colorPrimario = '#3498db';\n    const colorSecundario = '#2ecc71';\n    const colorTexto = '#333333';\n    const colorFondo = '#f8f9fa';\n    \n    // Añadir encabezado con logo y título\n    doc.setFillColor(colorPrimario);\n    doc.rect(0, 0, 210, 40, 'F');\n    \n    // Título\n    doc.setFont('helvetica', 'bold');\n    doc.setTextColor(255, 255, 255);\n    doc.setFontSize(28);\n    doc.text('AlhambraCRM', 105, 20, { align: 'center' });\n    \n    // Subtítulo\n    doc.setFontSize(16);\n    doc.text('Listado de Informes', 105, 32, { align: 'center' });\n    \n    // Añadir una franja decorativa\n    doc.setFillColor(colorSecundario);\n    doc.rect(0, 40, 210, 5, 'F');\n    \n    // Información de filtros - Sección de metadatos\n    doc.setTextColor(colorTexto);\n    doc.setFontSize(12);\n    \n    // Crear un recuadro para los metadatos\n    doc.setFillColor(colorFondo);\n    doc.roundedRect(15, 55, 180, 50, 3, 3, 'F');\n    \n    // Información de filtros\n    let textoFiltros = 'Todos los informes';\n    \n    if (filtros && filtros.tipo && filtros.tipo !== 'todos') {\n      textoFiltros = `Tipo: ${filtros.tipo}`;\n    }\n    \n    doc.setFont('helvetica', 'bold');\n    doc.text('Filtros aplicados:', 25, 70);\n    doc.setFont('helvetica', 'normal');\n    doc.text(textoFiltros, 105, 70);\n    \n    doc.setFont('helvetica', 'bold');\n    doc.text('Total de informes:', 25, 85);\n    doc.setFont('helvetica', 'normal');\n    doc.text(`${informes.length}`, 105, 85);\n    \n    doc.setFont('helvetica', 'bold');\n    doc.text('Fecha de generación:', 25, 100);\n    doc.setFont('helvetica', 'normal');\n    \n    const fechaGeneracion = new Date().toLocaleDateString('es-ES', {\n      day: '2-digit',\n      month: '2-digit',\n      year: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n    \n    doc.text(fechaGeneracion, 105, 100);\n    \n    // Título de la tabla\n    doc.setFontSize(14);\n    doc.setFont('helvetica', 'bold');\n    doc.setTextColor(colorPrimario);\n    doc.text('Detalle de Informes', 105, 120, { align: 'center' });\n    \n    // Simplificar la tabla para evitar errores\n    try {\n      // Crear tabla básica con los informes\n      const columnas = [\n        { header: 'Título', dataKey: 'titulo' },\n        { header: 'Tipo', dataKey: 'tipo' },\n        { header: 'Autor', dataKey: 'autor' }\n      ];\n      \n      // Preparar los datos simplificados para la tabla\n      const filas = informes.map(informe => [\n        informe.titulo || 'Sin título',\n        informe.tipo || 'Sin tipo',\n        informe.autor || 'Sin autor'\n      ]);\n      \n      // Configuración básica de la tabla\n      doc.autoTable({\n        startY: 130,\n        head: [['Título', 'Tipo', 'Autor']],\n        body: filas,\n        theme: 'grid',\n        headStyles: {\n          fillColor: colorPrimario,\n          textColor: [255, 255, 255],\n          fontStyle: 'bold'\n        },\n        alternateRowStyles: {\n          fillColor: [240, 240, 240]\n        },\n        margin: { top: 130, right: 15, bottom: 30, left: 15 }\n      });\n    } catch (tableError) {\n      console.error('Error al generar la tabla:', tableError);\n      \n      // Si falla la tabla, al menos mostramos una lista simple\n      doc.setFontSize(12);\n      doc.setFont('helvetica', 'normal');\n      doc.setTextColor(colorTexto);\n      doc.text('No se pudo generar la tabla. Lista simple de informes:', 20, 130);\n      \n      let yPos = 145;\n      informes.forEach((informe, index) => {\n        doc.text(`${index + 1}. ${informe.titulo || 'Sin título'} (${informe.tipo || 'Sin tipo'})`, 25, yPos);\n        yPos += 10;\n        \n        // Si llegamos al final de la página, creamos una nueva\n        if (yPos > 270) {\n          doc.addPage();\n          yPos = 20;\n        }\n      });\n    }\n    \n    // Añadir pie de página\n    const totalPaginas = doc.internal.getNumberOfPages();\n    \n    for (let i = 1; i <= totalPaginas; i++) {\n      doc.setPage(i);\n      \n      // Añadir una franja decorativa en el pie de página\n      doc.setFillColor(colorPrimario);\n      doc.rect(0, 280, 210, 17, 'F');\n      \n      doc.setFontSize(10);\n      doc.setTextColor(255, 255, 255);\n      doc.setFont('helvetica', 'normal');\n      \n      // Pie de página con fecha y número de página\n      doc.text(`AlhambraCRM - Documento generado el ${fechaGeneracion}`, 105, 290, { align: 'center' });\n      doc.text(`Página ${i} de ${totalPaginas}`, 180, 290);\n    }\n    \n    // Guardar el PDF\n    doc.save('Listado_Informes.pdf');\n    \n    return true;\n  } catch (error) {\n    console.error('Error al exportar lista de informes a PDF:', error);\n    throw new Error(`Error al generar el PDF de la lista de informes: ${error.message}`);\n  }\n};\n\n/**\n * Utilidad para exportar informes en formato Excel\n * En una implementación real, esto se haría con una biblioteca como xlsx\n * Por ahora, simplemente mostramos un mensaje de que esta funcionalidad está en desarrollo\n */\nexport const exportarInformeExcel = (informe) => {\n  alert('La exportación a Excel está en desarrollo. Estará disponible próximamente.');\n};\n\n/**\n * Formatear fecha para mostrar en el PDF\n */\nconst formatearFecha = (fechaStr) => {\n  if (!fechaStr) return '-';\n  \n  try {\n    const fecha = new Date(fechaStr);\n    if (isNaN(fecha.getTime())) return '-';\n    \n    return fecha.toLocaleDateString('es-ES', {\n      day: '2-digit',\n      month: '2-digit',\n      year: 'numeric'\n    });\n  } catch (error) {\n    console.error('Error al formatear fecha:', error);\n    return '-';\n  }\n};\n\nexport default {\n  exportarInformePDF,\n  exportarListaInformesPDF,\n  exportarInformeExcel\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}