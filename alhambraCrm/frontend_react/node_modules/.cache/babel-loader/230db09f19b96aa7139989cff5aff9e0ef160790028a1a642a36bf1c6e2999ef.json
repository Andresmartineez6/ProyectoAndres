{"ast":null,"code":"import jsPDF from 'jspdf';\nimport 'jspdf-autotable';\n\n/**\n * Exportar un informe individual a PDF\n */\nexport const exportarInformePDF = informe => {\n  try {\n    // Crear documento PDF\n    const doc = new jsPDF();\n\n    // Colores\n    const colorPrimario = '#3498db';\n\n    // Encabezado\n    doc.setFillColor(colorPrimario);\n    doc.rect(0, 0, 210, 30, 'F');\n\n    // Título - Texto en blanco\n    doc.setTextColor(255, 255, 255);\n    doc.setFontSize(20);\n    doc.setFont('helvetica', 'bold');\n    doc.text('AlhambraCRM', 105, 15, {\n      align: 'center'\n    });\n\n    // Subtítulo\n    doc.setFontSize(14);\n    doc.text(`Informe: ${informe.titulo || 'Sin título'}`, 105, 25, {\n      align: 'center'\n    });\n\n    // Contenido\n    doc.setTextColor(0, 0, 0);\n    doc.setFontSize(12);\n    doc.setFont('helvetica', 'normal');\n\n    // Metadatos\n    let y = 40;\n    doc.setFont('helvetica', 'bold');\n    doc.text('Fecha:', 20, y);\n    doc.setFont('helvetica', 'normal');\n    doc.text(formatearFecha(informe.fechaActualizacion || informe.fechaCreacion), 60, y);\n    y += 10;\n    doc.setFont('helvetica', 'bold');\n    doc.text('Autor:', 20, y);\n    doc.setFont('helvetica', 'normal');\n    doc.text(informe.autor || 'No especificado', 60, y);\n    y += 10;\n    doc.setFont('helvetica', 'bold');\n    doc.text('Tipo:', 20, y);\n    doc.setFont('helvetica', 'normal');\n    doc.text(informe.tipo || 'No especificado', 60, y);\n    if (informe.proyecto) {\n      y += 10;\n      doc.setFont('helvetica', 'bold');\n      doc.text('Proyecto:', 20, y);\n      doc.setFont('helvetica', 'normal');\n      doc.text(informe.proyecto, 60, y);\n    }\n\n    // Descripción\n    y += 20;\n    doc.setFont('helvetica', 'bold');\n    doc.text('Descripción:', 20, y);\n    y += 10;\n    doc.setFont('helvetica', 'normal');\n    const descripcion = informe.descripcion || 'No hay descripción disponible';\n    const descripcionLineas = doc.splitTextToSize(descripcion, 170);\n    doc.text(descripcionLineas, 20, y);\n\n    // Contenido\n    y += descripcionLineas.length * 7 + 10;\n    doc.setFont('helvetica', 'bold');\n    doc.text('Contenido:', 20, y);\n    y += 10;\n    doc.setFont('helvetica', 'normal');\n    const contenido = informe.contenido || 'No hay contenido disponible';\n    const contenidoLineas = doc.splitTextToSize(contenido, 170);\n    doc.text(contenidoLineas, 20, y);\n\n    // Pie de página\n    doc.setFontSize(10);\n    doc.setTextColor(100, 100, 100);\n    doc.text(`Generado el ${new Date().toLocaleDateString('es-ES')}`, 20, 280);\n    doc.text('AlhambraCRM', 105, 280, {\n      align: 'center'\n    });\n    doc.text('Página 1', 190, 280, {\n      align: 'right'\n    });\n\n    // Guardar PDF\n    doc.save(`Informe_${informe.titulo.replace(/\\s+/g, '_')}.pdf`);\n    return true;\n  } catch (error) {\n    console.error('Error al exportar informe a PDF:', error);\n    throw new Error('Error al generar el PDF');\n  }\n};\n\n/**\n * Exportar lista de informes a PDF\n */\nexport const exportarListaInformesPDF = informes => {\n  try {\n    // Validación básica\n    if (!Array.isArray(informes) || informes.length === 0) {\n      throw new Error('No hay informes para exportar');\n    }\n\n    // Crear documento PDF\n    const doc = new jsPDF();\n\n    // Colores\n    const colorPrimario = '#3498db';\n\n    // Encabezado\n    doc.setFillColor(colorPrimario);\n    doc.rect(0, 0, 210, 30, 'F');\n\n    // Título - Texto en blanco\n    doc.setTextColor(255, 255, 255);\n    doc.setFontSize(20);\n    doc.setFont('helvetica', 'bold');\n    doc.text('AlhambraCRM', 105, 15, {\n      align: 'center'\n    });\n\n    // Subtítulo\n    doc.setFontSize(14);\n    doc.text('Listado de Informes', 105, 25, {\n      align: 'center'\n    });\n\n    // Información básica\n    doc.setTextColor(0, 0, 0);\n    doc.setFontSize(12);\n    doc.setFont('helvetica', 'normal');\n    doc.text(`Total de informes: ${informes.length}`, 20, 40);\n    doc.text(`Fecha de generación: ${new Date().toLocaleDateString('es-ES')}`, 20, 50);\n\n    // Tabla simple\n    try {\n      // Datos para la tabla\n      const headers = ['Título', 'Tipo', 'Autor'];\n      const rows = informes.map(informe => [informe.titulo || 'Sin título', informe.tipo || 'Sin tipo', informe.autor || 'Sin autor']);\n\n      // Crear tabla\n      doc.autoTable({\n        head: [headers],\n        body: rows,\n        startY: 60,\n        theme: 'grid',\n        headStyles: {\n          fillColor: colorPrimario,\n          textColor: [255, 255, 255],\n          fontStyle: 'bold'\n        },\n        alternateRowStyles: {\n          fillColor: [245, 245, 245]\n        }\n      });\n    } catch (tableError) {\n      // Si falla la tabla, mostrar mensaje\n      console.error('Error al generar tabla:', tableError);\n      doc.text('No se pudo generar la tabla de informes.', 20, 60);\n    }\n\n    // Pie de página\n    doc.setFontSize(10);\n    doc.setTextColor(100, 100, 100);\n    doc.text(`Generado el ${new Date().toLocaleDateString('es-ES')}`, 20, 280);\n    doc.text('AlhambraCRM', 105, 280, {\n      align: 'center'\n    });\n    doc.text('Página 1', 190, 280, {\n      align: 'right'\n    });\n\n    // Guardar PDF\n    doc.save('Listado_Informes.pdf');\n    return true;\n  } catch (error) {\n    console.error('Error al exportar lista de informes a PDF:', error);\n    throw new Error('Error al generar el PDF');\n  }\n};\n\n/**\n * Exportar un informe a Excel\n */\nexport const exportarInformeExcel = informe => {\n  try {\n    // Crear un array con los datos del informe\n    const datos = [['AlhambraCRM - Informe'], ['Título', informe.titulo || 'Sin título'], ['Autor', informe.autor || 'Sin autor'], ['Tipo', informe.tipo || 'Sin tipo'], ['Fecha', formatearFecha(informe.fechaActualizacion || informe.fechaCreacion)], ['Proyecto', informe.proyecto || 'No especificado'], [''], ['Descripción'], [informe.descripcion || 'No hay descripción disponible'], [''], ['Contenido'], [informe.contenido || 'No hay contenido disponible']];\n\n    // Convertir a CSV\n    const csv = datos.map(fila => fila.join(',')).join('\\n');\n\n    // Crear blob y descargar\n    const blob = new Blob([csv], {\n      type: 'text/csv;charset=utf-8;'\n    });\n    const url = URL.createObjectURL(blob);\n\n    // Crear enlace y simular clic\n    const link = document.createElement('a');\n    link.href = url;\n    link.setAttribute('download', `Informe_${informe.titulo.replace(/\\s+/g, '_')}.csv`);\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n    return true;\n  } catch (error) {\n    console.error('Error al exportar informe a Excel:', error);\n    throw new Error('Error al generar el archivo Excel');\n  }\n};\n\n/**\n * Exportar lista de informes a Excel\n */\nexport const exportarListaInformesExcel = informes => {\n  try {\n    // Validación básica\n    if (!Array.isArray(informes) || informes.length === 0) {\n      throw new Error('No hay informes para exportar');\n    }\n\n    // Crear cabecera\n    const cabecera = ['Título', 'Tipo', 'Autor', 'Fecha', 'Proyecto'];\n\n    // Crear filas\n    const filas = informes.map(informe => [informe.titulo || 'Sin título', informe.tipo || 'Sin tipo', informe.autor || 'Sin autor', formatearFecha(informe.fechaActualizacion || informe.fechaCreacion), informe.proyecto || 'No especificado']);\n\n    // Unir todo\n    const datos = [['AlhambraCRM - Listado de Informes'], ['Fecha de generación', new Date().toLocaleDateString('es-ES')], [''], cabecera, ...filas];\n\n    // Convertir a CSV\n    const csv = datos.map(fila => fila.join(',')).join('\\n');\n\n    // Crear blob y descargar\n    const blob = new Blob([csv], {\n      type: 'text/csv;charset=utf-8;'\n    });\n    const url = URL.createObjectURL(blob);\n\n    // Crear enlace y simular clic\n    const link = document.createElement('a');\n    link.href = url;\n    link.setAttribute('download', 'Listado_Informes.csv');\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n    return true;\n  } catch (error) {\n    console.error('Error al exportar lista de informes a Excel:', error);\n    throw new Error('Error al generar el archivo Excel');\n  }\n};\n\n/**\n * Formatear fecha\n */\nconst formatearFecha = fechaStr => {\n  if (!fechaStr) return '-';\n  try {\n    const fecha = new Date(fechaStr);\n    if (isNaN(fecha.getTime())) return '-';\n    return fecha.toLocaleDateString('es-ES');\n  } catch (error) {\n    return '-';\n  }\n};\nexport default {\n  exportarInformePDF,\n  exportarListaInformesPDF,\n  exportarInformeExcel,\n  exportarListaInformesExcel\n};","map":{"version":3,"names":["jsPDF","exportarInformePDF","informe","doc","colorPrimario","setFillColor","rect","setTextColor","setFontSize","setFont","text","align","titulo","y","formatearFecha","fechaActualizacion","fechaCreacion","autor","tipo","proyecto","descripcion","descripcionLineas","splitTextToSize","length","contenido","contenidoLineas","Date","toLocaleDateString","save","replace","error","console","Error","exportarListaInformesPDF","informes","Array","isArray","headers","rows","map","autoTable","head","body","startY","theme","headStyles","fillColor","textColor","fontStyle","alternateRowStyles","tableError","exportarInformeExcel","datos","csv","fila","join","blob","Blob","type","url","URL","createObjectURL","link","document","createElement","href","setAttribute","appendChild","click","removeChild","exportarListaInformesExcel","cabecera","filas","fechaStr","fecha","isNaN","getTime"],"sources":["C:/Users/andre/Desktop/ProyectoAndres/alhambraCrm/frontend_react/src/utilidades/exportarPDF.js"],"sourcesContent":["import jsPDF from 'jspdf';\nimport 'jspdf-autotable';\n\n/**\n * Exportar un informe individual a PDF\n */\nexport const exportarInformePDF = (informe) => {\n  try {\n    // Crear documento PDF\n    const doc = new jsPDF();\n    \n    // Colores\n    const colorPrimario = '#3498db';\n    \n    // Encabezado\n    doc.setFillColor(colorPrimario);\n    doc.rect(0, 0, 210, 30, 'F');\n    \n    // Título - Texto en blanco\n    doc.setTextColor(255, 255, 255);\n    doc.setFontSize(20);\n    doc.setFont('helvetica', 'bold');\n    doc.text('AlhambraCRM', 105, 15, { align: 'center' });\n    \n    // Subtítulo\n    doc.setFontSize(14);\n    doc.text(`Informe: ${informe.titulo || 'Sin título'}`, 105, 25, { align: 'center' });\n    \n    // Contenido\n    doc.setTextColor(0, 0, 0);\n    doc.setFontSize(12);\n    doc.setFont('helvetica', 'normal');\n    \n    // Metadatos\n    let y = 40;\n    doc.setFont('helvetica', 'bold');\n    doc.text('Fecha:', 20, y);\n    doc.setFont('helvetica', 'normal');\n    doc.text(formatearFecha(informe.fechaActualizacion || informe.fechaCreacion), 60, y);\n    \n    y += 10;\n    doc.setFont('helvetica', 'bold');\n    doc.text('Autor:', 20, y);\n    doc.setFont('helvetica', 'normal');\n    doc.text(informe.autor || 'No especificado', 60, y);\n    \n    y += 10;\n    doc.setFont('helvetica', 'bold');\n    doc.text('Tipo:', 20, y);\n    doc.setFont('helvetica', 'normal');\n    doc.text(informe.tipo || 'No especificado', 60, y);\n    \n    if (informe.proyecto) {\n      y += 10;\n      doc.setFont('helvetica', 'bold');\n      doc.text('Proyecto:', 20, y);\n      doc.setFont('helvetica', 'normal');\n      doc.text(informe.proyecto, 60, y);\n    }\n    \n    // Descripción\n    y += 20;\n    doc.setFont('helvetica', 'bold');\n    doc.text('Descripción:', 20, y);\n    \n    y += 10;\n    doc.setFont('helvetica', 'normal');\n    const descripcion = informe.descripcion || 'No hay descripción disponible';\n    const descripcionLineas = doc.splitTextToSize(descripcion, 170);\n    doc.text(descripcionLineas, 20, y);\n    \n    // Contenido\n    y += descripcionLineas.length * 7 + 10;\n    doc.setFont('helvetica', 'bold');\n    doc.text('Contenido:', 20, y);\n    \n    y += 10;\n    doc.setFont('helvetica', 'normal');\n    const contenido = informe.contenido || 'No hay contenido disponible';\n    const contenidoLineas = doc.splitTextToSize(contenido, 170);\n    doc.text(contenidoLineas, 20, y);\n    \n    // Pie de página\n    doc.setFontSize(10);\n    doc.setTextColor(100, 100, 100);\n    doc.text(`Generado el ${new Date().toLocaleDateString('es-ES')}`, 20, 280);\n    doc.text('AlhambraCRM', 105, 280, { align: 'center' });\n    doc.text('Página 1', 190, 280, { align: 'right' });\n    \n    // Guardar PDF\n    doc.save(`Informe_${informe.titulo.replace(/\\s+/g, '_')}.pdf`);\n    return true;\n  } catch (error) {\n    console.error('Error al exportar informe a PDF:', error);\n    throw new Error('Error al generar el PDF');\n  }\n};\n\n/**\n * Exportar lista de informes a PDF\n */\nexport const exportarListaInformesPDF = (informes) => {\n  try {\n    // Validación básica\n    if (!Array.isArray(informes) || informes.length === 0) {\n      throw new Error('No hay informes para exportar');\n    }\n    \n    // Crear documento PDF\n    const doc = new jsPDF();\n    \n    // Colores\n    const colorPrimario = '#3498db';\n    \n    // Encabezado\n    doc.setFillColor(colorPrimario);\n    doc.rect(0, 0, 210, 30, 'F');\n    \n    // Título - Texto en blanco\n    doc.setTextColor(255, 255, 255);\n    doc.setFontSize(20);\n    doc.setFont('helvetica', 'bold');\n    doc.text('AlhambraCRM', 105, 15, { align: 'center' });\n    \n    // Subtítulo\n    doc.setFontSize(14);\n    doc.text('Listado de Informes', 105, 25, { align: 'center' });\n    \n    // Información básica\n    doc.setTextColor(0, 0, 0);\n    doc.setFontSize(12);\n    doc.setFont('helvetica', 'normal');\n    doc.text(`Total de informes: ${informes.length}`, 20, 40);\n    doc.text(`Fecha de generación: ${new Date().toLocaleDateString('es-ES')}`, 20, 50);\n    \n    // Tabla simple\n    try {\n      // Datos para la tabla\n      const headers = ['Título', 'Tipo', 'Autor'];\n      const rows = informes.map(informe => [\n        informe.titulo || 'Sin título',\n        informe.tipo || 'Sin tipo',\n        informe.autor || 'Sin autor'\n      ]);\n      \n      // Crear tabla\n      doc.autoTable({\n        head: [headers],\n        body: rows,\n        startY: 60,\n        theme: 'grid',\n        headStyles: {\n          fillColor: colorPrimario,\n          textColor: [255, 255, 255],\n          fontStyle: 'bold'\n        },\n        alternateRowStyles: {\n          fillColor: [245, 245, 245]\n        }\n      });\n    } catch (tableError) {\n      // Si falla la tabla, mostrar mensaje\n      console.error('Error al generar tabla:', tableError);\n      doc.text('No se pudo generar la tabla de informes.', 20, 60);\n    }\n    \n    // Pie de página\n    doc.setFontSize(10);\n    doc.setTextColor(100, 100, 100);\n    doc.text(`Generado el ${new Date().toLocaleDateString('es-ES')}`, 20, 280);\n    doc.text('AlhambraCRM', 105, 280, { align: 'center' });\n    doc.text('Página 1', 190, 280, { align: 'right' });\n    \n    // Guardar PDF\n    doc.save('Listado_Informes.pdf');\n    return true;\n  } catch (error) {\n    console.error('Error al exportar lista de informes a PDF:', error);\n    throw new Error('Error al generar el PDF');\n  }\n};\n\n/**\n * Exportar un informe a Excel\n */\nexport const exportarInformeExcel = (informe) => {\n  try {\n    // Crear un array con los datos del informe\n    const datos = [\n      ['AlhambraCRM - Informe'],\n      ['Título', informe.titulo || 'Sin título'],\n      ['Autor', informe.autor || 'Sin autor'],\n      ['Tipo', informe.tipo || 'Sin tipo'],\n      ['Fecha', formatearFecha(informe.fechaActualizacion || informe.fechaCreacion)],\n      ['Proyecto', informe.proyecto || 'No especificado'],\n      [''],\n      ['Descripción'],\n      [informe.descripcion || 'No hay descripción disponible'],\n      [''],\n      ['Contenido'],\n      [informe.contenido || 'No hay contenido disponible']\n    ];\n    \n    // Convertir a CSV\n    const csv = datos.map(fila => fila.join(',')).join('\\n');\n    \n    // Crear blob y descargar\n    const blob = new Blob([csv], { type: 'text/csv;charset=utf-8;' });\n    const url = URL.createObjectURL(blob);\n    \n    // Crear enlace y simular clic\n    const link = document.createElement('a');\n    link.href = url;\n    link.setAttribute('download', `Informe_${informe.titulo.replace(/\\s+/g, '_')}.csv`);\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n    \n    return true;\n  } catch (error) {\n    console.error('Error al exportar informe a Excel:', error);\n    throw new Error('Error al generar el archivo Excel');\n  }\n};\n\n/**\n * Exportar lista de informes a Excel\n */\nexport const exportarListaInformesExcel = (informes) => {\n  try {\n    // Validación básica\n    if (!Array.isArray(informes) || informes.length === 0) {\n      throw new Error('No hay informes para exportar');\n    }\n    \n    // Crear cabecera\n    const cabecera = ['Título', 'Tipo', 'Autor', 'Fecha', 'Proyecto'];\n    \n    // Crear filas\n    const filas = informes.map(informe => [\n      informe.titulo || 'Sin título',\n      informe.tipo || 'Sin tipo',\n      informe.autor || 'Sin autor',\n      formatearFecha(informe.fechaActualizacion || informe.fechaCreacion),\n      informe.proyecto || 'No especificado'\n    ]);\n    \n    // Unir todo\n    const datos = [\n      ['AlhambraCRM - Listado de Informes'],\n      ['Fecha de generación', new Date().toLocaleDateString('es-ES')],\n      [''],\n      cabecera,\n      ...filas\n    ];\n    \n    // Convertir a CSV\n    const csv = datos.map(fila => fila.join(',')).join('\\n');\n    \n    // Crear blob y descargar\n    const blob = new Blob([csv], { type: 'text/csv;charset=utf-8;' });\n    const url = URL.createObjectURL(blob);\n    \n    // Crear enlace y simular clic\n    const link = document.createElement('a');\n    link.href = url;\n    link.setAttribute('download', 'Listado_Informes.csv');\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n    \n    return true;\n  } catch (error) {\n    console.error('Error al exportar lista de informes a Excel:', error);\n    throw new Error('Error al generar el archivo Excel');\n  }\n};\n\n/**\n * Formatear fecha\n */\nconst formatearFecha = (fechaStr) => {\n  if (!fechaStr) return '-';\n  \n  try {\n    const fecha = new Date(fechaStr);\n    if (isNaN(fecha.getTime())) return '-';\n    \n    return fecha.toLocaleDateString('es-ES');\n  } catch (error) {\n    return '-';\n  }\n};\n\nexport default {\n  exportarInformePDF,\n  exportarListaInformesPDF,\n  exportarInformeExcel,\n  exportarListaInformesExcel\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}